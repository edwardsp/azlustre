{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "name": {
      "type": "string",
      "maxLength": 20,
      "metadata": {
        "description": "The name for the Lustre filesystem."
      }
    },
    "mdsSku": {
      "defaultValue": "Standard_D8s_v3",
      "type": "string",
      "metadata": "The SKU for the MDS"
    },
    "ossSku": {
      "defaultValue": "Standard_L8s_v2",
      "type": "string",
      "metadata": {
        "description": "The VM type for the Lustre nodes."
      }
    },
    "instanceCount": {
      "maxValue": 300,
      "type": "int",
      "metadata": {
        "description": "Number of additional Lustre nodes."
      }
    },
    "rsaPublicKey": {
      "type": "string",
      "metadata": {
        "description": "The RSA public key to access the nodes."
      }
    },
    "imageResourceGroup": {
      "type": "string",
      "metadata": {
        "description": "Name of the the resource group containing the Lustre image"
      }
    },
    "imageName": {
      "type": "string",
      "metadata": {
        "description": "Name of the Lustre image to use"
      }
    },
    "existingVnetResourceGroupName": {
      "type": "string",
      "metadata": {
        "description": "Name of the resource group for the existing virtual network to deploy the scale set into."
      }
    },
    "existingVnetName": {
      "type": "string",
      "metadata": {
        "description": "Name of the existing virtual network to deploy the scale set into."
      }
    },
    "existingSubnetName": {
      "type": "string",
      "metadata": {
        "description": "Name of the existing subnet to deploy the scale set into."
      }
    },
    "storageAccount": {
      "type": "string",
      "defaultValue": "",
      "metadata": {
        "description": "Optional. The storage account to use (leave blank to disable HSM)"
      }
    },
    "storageContainer": {
      "type": "string",
      "defaultValue": "",
      "metadata": {
        "description": "The storage container to use for archive"
      }
    },
    "storageKey": {
      "type": "string",
      "defaultValue": "",
      "metadata": {
        "description": "The storage account key"
      }
    },
    "logAnalyticsAccount": {
      "type": "string",
      "defaultValue": "",
      "metadata": {
        "description": "Optional. The log analytics account to use (leave blank to disable logging)"
      }
    },
    "logAnalyticsWorkspaceId": {
      "type": "string",
      "defaultValue": "",
      "metadata": {
        "description": " The log analytics workspace id"
      }
    },
    "logAnalyticsKey": {
      "type": "string",
      "defaultValue": "",
      "metadata": {
        "description": "The log analytics account key"
      }
    },
    "mdtStorageSku": {
      "type": "string",
      "defaultValue": "Premium_LRS",
      "metadata": {
        "description": "The size of the MDT disks"
      }
    },
    "mdtCacheOption": {
      "type": "string",
      "defaultValue": "ReadWrite",
      "metadata": {
        "description": "The size of the MDT disks"
      }
    },
    "mdtDiskSize": {
      "type": "int",
      "defaultValue": 1024,
      "metadata": {
        "description": "The size of the MDT disks"
      }
    },
    "mdtNumDisks": {
      "type": "int",
      "defaultValue": 2,
      "metadata": {
        "description": "The number of disks in the MDT RAID"
      }
    },
    "ostStorageSku": {
      "type": "string",
      "defaultValue": "Premium_LRS",
      "metadata": {
        "description": "The size of the MDT disks"
      }
    },
    "ostCacheOption": {
      "type": "string",
      "defaultValue": "None",
      "metadata": {
        "description": "The size of the MDT disks"
      }
    },
    "ostDiskSize": {
      "type": "int",
      "defaultValue": 1024,
      "metadata": {
        "description": "The size of the OSS disks"
      }
    },
    "ostNumDisks": {
      "type": "int",
      "defaultValue": 6,
      "metadata": {
        "description": "The number of disks on each OSS"
      }
    },
    "ossDiskSetup": {
      "type": "string",
      "defaultValue": "raid",
      "allowedValues": [
        "raid",
        "separate"
      ],
      "metadata": {
        "description": "Create a single RAID or use multiple OSTs"
      }
    }
  },
  "variables": {
    "tagname": "[concat('LustreFS-', parameters('name'))]",
    "subnet": "[resourceId(parameters('existingVnetResourceGroupName'), 'Microsoft.Network/virtualNetworks/subnets', parameters('existingVnetName'), parameters('existingSubNetName'))]",
    "imageReference": {
      "id": "[resourceId(parameters('imageResourceGroup'), 'Microsoft.Compute/images', parameters('imageName'))]"
    },
    "ciScript": "[concat('#!/bin/bash\nset --',' ',parameters('name'),' ',parameters('storageAccount'),' ',parameters('storageKey'),' ',parameters('storageContainer'),' ',parameters('logAnalyticsAccount'),' ',parameters('logAnalyticsWorkspaceId'),' ',parameters('logAnalyticsKey'),' ',parameters('ossDiskSetup'),'\n','# This script was generated using Makeself 2.4.0\n# The license covering this archive and its contents, if any, is wholly independent of the Makeself license (GPL)\nORIG_UMASK=`umask`\nif test \"n\" = n; then\n    umask 077\nfi\n\nCRCsum=\"2770986862\"\nMD5=\"d9080acaa792db597ad7768831afab6e\"\nSHA=\"0000000000000000000000000000000000000000000000000000000000000000\"\nTMPROOT=${TMPDIR:=/tmp}\nUSER_PWD=\"$PWD\"; export USER_PWD\n\nlabel=\"Cloudinit script\"\nscript=\"./setup_lustre.sh\"\nscriptargs=\"\"\nlicensetxt=\"\"\nhelpheader=''''\ntargetdir=\"lustre-setup-scripts\"\nfilesizes=\"41499\"\nkeep=\"n\"\nnooverwrite=\"n\"\nquiet=\"n\"\naccept=\"n\"\nnodiskspace=\"n\"\nexport_conf=\"n\"\n\nprint_cmd_arg=\"\"\nif type printf > /dev/null; then\n    print_cmd=\"printf\"\nelif test -x /usr/ucb/echo; then\n    print_cmd=\"/usr/ucb/echo\"\nelse\n    print_cmd=\"echo\"\nfi\n\nif test -d /usr/xpg4/bin; then\n    PATH=/usr/xpg4/bin:$PATH\n    export PATH\nfi\n\nif test -d /usr/sfw/bin; then\n    PATH=$PATH:/usr/sfw/bin\n    export PATH\nfi\n\nunset CDPATH\n\nMS_Printf()\n{\n    $print_cmd $print_cmd_arg \"$1\"\n}\n\nMS_PrintLicense()\n{\n  if test x\"$licensetxt\" != x; then\n    echo \"$licensetxt\" | more\n    if test x\"$accept\" != xy; then\n      while true\n      do\n        MS_Printf \"Please type y to accept, n otherwise: \"\n        read yn\n        if test x\"$yn\" = xn; then\n          keep=n\n          eval $finish; exit 1\n          break;\n        elif test x\"$yn\" = xy; then\n          break;\n        fi\n      done\n    fi\n  fi\n}\n\nMS_diskspace()\n{\n\t(\n\tdf -kP \"$1\" | tail -1 | awk ''{ if ($4 ~ /%/) {print $3} else {print $4} }''\n\t)\n}\n\nMS_dd()\n{\n    blocks=`expr $3 / 1024`\n    bytes=`expr $3 % 1024`\n    dd if=\"$1\" ibs=$2 skip=1 obs=1024 conv=sync 2> /dev/null | \\\n    { test $blocks -gt 0 && dd ibs=1024 obs=1024 count=$blocks ; \\\n      test $bytes  -gt 0 && dd ibs=1 obs=1024 count=$bytes ; } 2> /dev/null\n}\n\nMS_dd_Progress()\n{\n    if test x\"$noprogress\" = xy; then\n        MS_dd $@\n        return $?\n    fi\n    file=\"$1\"\n    offset=$2\n    length=$3\n    pos=0\n    bsize=4194304\n    while test $bsize -gt $length; do\n        bsize=`expr $bsize / 4`\n    done\n    blocks=`expr $length / $bsize`\n    bytes=`expr $length % $bsize`\n    (\n        dd ibs=$offset skip=1 2>/dev/null\n        pos=`expr $pos \\+ $bsize`\n        MS_Printf \"     0%% \" 1>&2\n        if test $blocks -gt 0; then\n            while test $pos -le $length; do\n                dd bs=$bsize count=1 2>/dev/null\n                pcent=`expr $length / 100`\n                pcent=`expr $pos / $pcent`\n                if test $pcent -lt 100; then\n                    MS_Printf \"\\b\\b\\b\\b\\b\\b\\b\" 1>&2\n                    if test $pcent -lt 10; then\n                        MS_Printf \"    $pcent%% \" 1>&2\n                    else\n                        MS_Printf \"   $pcent%% \" 1>&2\n                    fi\n                fi\n                pos=`expr $pos \\+ $bsize`\n            done\n        fi\n        if test $bytes -gt 0; then\n            dd bs=$bytes count=1 2>/dev/null\n        fi\n        MS_Printf \"\\b\\b\\b\\b\\b\\b\\b\" 1>&2\n        MS_Printf \" 100%%  \" 1>&2\n    ) < \"$file\"\n}\n\nMS_Help()\n{\n    cat << EOH >&2\n${helpheader}Makeself version 2.4.0\n 1) Getting help or info about $0 :\n  $0 --help   Print this message\n  $0 --info   Print embedded info : title, default target directory, embedded script ...\n  $0 --lsm    Print embedded lsm entry (or no LSM)\n  $0 --list   Print the list of files in the archive\n  $0 --check  Checks integrity of the archive\n\n 2) Running $0 :\n  $0 [options] [--] [additional arguments to embedded script]\n  with following options (in that order)\n  --confirm             Ask before running embedded script\n  --quiet\t\tDo not print anything except error messages\n  --accept              Accept the license\n  --noexec              Do not run embedded script\n  --keep                Do not erase target directory after running\n\t\t\tthe embedded script\n  --noprogress          Do not show the progress during the decompression\n  --nox11               Do not spawn an xterm\n  --nochown             Do not give the extracted files to the current user\n  --nodiskspace         Do not check for available disk space\n  --target dir          Extract directly to a target directory (absolute or relative)\n                        This directory may undergo recursive chown (see --nochown).\n  --tar arg1 [arg2 ...] Access the contents of the archive through the tar command\n  --                    Following arguments will be passed to the embedded script\nEOH\n}\n\nMS_Check()\n{\n    OLD_PATH=\"$PATH\"\n    PATH=${GUESS_MD5_PATH:-\"$OLD_PATH:/bin:/usr/bin:/sbin:/usr/local/ssl/bin:/usr/local/bin:/opt/openssl/bin\"}\n\tMD5_ARG=\"\"\n    MD5_PATH=`exec <&- 2>&-; which md5sum || command -v md5sum || type md5sum`\n    test -x \"$MD5_PATH\" || MD5_PATH=`exec <&- 2>&-; which md5 || command -v md5 || type md5`\n    test -x \"$MD5_PATH\" || MD5_PATH=`exec <&- 2>&-; which digest || command -v digest || type digest`\n    PATH=\"$OLD_PATH\"\n\n    SHA_PATH=`exec <&- 2>&-; which shasum || command -v shasum || type shasum`\n    test -x \"$SHA_PATH\" || SHA_PATH=`exec <&- 2>&-; which sha256sum || command -v sha256sum || type sha256sum`\n\n    if test x\"$quiet\" = xn; then\n\t\tMS_Printf \"Verifying archive integrity...\"\n    fi\n    offset=`head -n 588 \"$1\" | wc -c | tr -d \" \"`\n    verb=$2\n    i=1\n    for s in $filesizes\n    do\n\t\tcrc=`echo $CRCsum | cut -d\" \" -f$i`\n\t\tif test -x \"$SHA_PATH\"; then\n\t\t\tif test x\"`basename $SHA_PATH`\" = xshasum; then\n\t\t\t\tSHA_ARG=\"-a 256\"\n\t\t\tfi\n\t\t\tsha=`echo $SHA | cut -d\" \" -f$i`\n\t\t\tif test x\"$sha\" = x0000000000000000000000000000000000000000000000000000000000000000; then\n\t\t\t\ttest x\"$verb\" = xy && echo \" $1 does not contain an embedded SHA256 checksum.\" >&2\n\t\t\telse\n\t\t\t\tshasum=`MS_dd_Progress \"$1\" $offset $s | eval \"$SHA_PATH $SHA_ARG\" | cut -b-64`;\n\t\t\t\tif test x\"$shasum\" != x\"$sha\"; then\n\t\t\t\t\techo \"Error in SHA256 checksums: $shasum is different from $sha\" >&2\n\t\t\t\t\texit 2\n\t\t\t\telse\n\t\t\t\t\ttest x\"$verb\" = xy && MS_Printf \" SHA256 checksums are OK.\" >&2\n\t\t\t\tfi\n\t\t\t\tcrc=\"0000000000\";\n\t\t\tfi\n\t\tfi\n\t\tif test -x \"$MD5_PATH\"; then\n\t\t\tif test x\"`basename $MD5_PATH`\" = xdigest; then\n\t\t\t\tMD5_ARG=\"-a md5\"\n\t\t\tfi\n\t\t\tmd5=`echo $MD5 | cut -d\" \" -f$i`\n\t\t\tif test x\"$md5\" = x00000000000000000000000000000000; then\n\t\t\t\ttest x\"$verb\" = xy && echo \" $1 does not contain an embedded MD5 checksum.\" >&2\n\t\t\telse\n\t\t\t\tmd5sum=`MS_dd_Progress \"$1\" $offset $s | eval \"$MD5_PATH $MD5_ARG\" | cut -b-32`;\n\t\t\t\tif test x\"$md5sum\" != x\"$md5\"; then\n\t\t\t\t\techo \"Error in MD5 checksums: $md5sum is different from $md5\" >&2\n\t\t\t\t\texit 2\n\t\t\t\telse\n\t\t\t\t\ttest x\"$verb\" = xy && MS_Printf \" MD5 checksums are OK.\" >&2\n\t\t\t\tfi\n\t\t\t\tcrc=\"0000000000\"; verb=n\n\t\t\tfi\n\t\tfi\n\t\tif test x\"$crc\" = x0000000000; then\n\t\t\ttest x\"$verb\" = xy && echo \" $1 does not contain a CRC checksum.\" >&2\n\t\telse\n\t\t\tsum1=`MS_dd_Progress \"$1\" $offset $s | CMD_ENV=xpg4 cksum | awk ''{print $1}''`\n\t\t\tif test x\"$sum1\" = x\"$crc\"; then\n\t\t\t\ttest x\"$verb\" = xy && MS_Printf \" CRC checksums are OK.\" >&2\n\t\t\telse\n\t\t\t\techo \"Error in checksums: $sum1 is different from $crc\" >&2\n\t\t\t\texit 2;\n\t\t\tfi\n\t\tfi\n\t\ti=`expr $i + 1`\n\t\toffset=`expr $offset + $s`\n    done\n    if test x\"$quiet\" = xn; then\n\t\techo \" All good.\"\n    fi\n}\n\nUnTAR()\n{\n    if test x\"$quiet\" = xn; then\n\t\ttar $1vf -  2>&1 || { echo \" ... Extraction failed.\" > /dev/tty; kill -15 $$; }\n    else\n\t\ttar $1f -  2>&1 || { echo Extraction failed. > /dev/tty; kill -15 $$; }\n    fi\n}\n\nfinish=true\nxterm_loop=\nnoprogress=n\nnox11=n\ncopy=none\nownership=y\nverbose=n\n\ninitargs=\"$@\"\n\nwhile true\ndo\n    case \"$1\" in\n    -h | --help)\n\tMS_Help\n\texit 0\n\t;;\n    -q | --quiet)\n\tquiet=y\n\tnoprogress=y\n\tshift\n\t;;\n\t--accept)\n\taccept=y\n\tshift\n\t;;\n    --info)\n\techo Identification: \"$label\"\n\techo Target directory: \"$targetdir\"\n\techo Uncompressed size: 60 KB\n\techo Compression: base64\n\techo Date of packaging: Thu Nov 12 03:31:52 GMT 2020\n\techo Built with Makeself version 2.4.0 on \n\techo Build command was: \"/usr/bin/makeself \\\\\n    \\\"--base64\\\" \\\\\n    \\\"packer/lustre-setup-scripts\\\" \\\\\n    \\\"cloudinit_2020-11-12_03-31-52.sh\\\" \\\\\n    \\\"Cloudinit script\\\" \\\\\n    \\\"./setup_lustre.sh\\\"\"\n\tif test x\"$script\" != x; then\n\t    echo Script run after extraction:\n\t    echo \"    \" $script $scriptargs\n\tfi\n\tif test x\"\" = xcopy; then\n\t\techo \"Archive will copy itself to a temporary location\"\n\tfi\n\tif test x\"n\" = xy; then\n\t\techo \"Root permissions required for extraction\"\n\tfi\n\tif test x\"n\" = xy; then\n\t    echo \"directory $targetdir is permanent\"\n\telse\n\t    echo \"$targetdir will be removed after extraction\"\n\tfi\n\texit 0\n\t;;\n    --dumpconf)\n\techo LABEL=\\\"$label\\\"\n\techo SCRIPT=\\\"$script\\\"\n\techo SCRIPTARGS=\\\"$scriptargs\\\"\n\techo archdirname=\\\"lustre-setup-scripts\\\"\n\techo KEEP=n\n\techo NOOVERWRITE=n\n\techo COMPRESS=base64\n\techo filesizes=\\\"$filesizes\\\"\n\techo CRCsum=\\\"$CRCsum\\\"\n\techo MD5sum=\\\"$MD5\\\"\n\techo OLDUSIZE=60\n\techo OLDSKIP=589\n\texit 0\n\t;;\n    --lsm)\ncat << EOLSM\nNo LSM.\nEOLSM\n\texit 0\n\t;;\n    --list)\n\techo Target directory: $targetdir\n\toffset=`head -n 588 \"$0\" | wc -c | tr -d \" \"`\n\tfor s in $filesizes\n\tdo\n\t    MS_dd \"$0\" $offset $s | eval \"base64 --decode -i -\" | UnTAR t\n\t    offset=`expr $offset + $s`\n\tdone\n\texit 0\n\t;;\n\t--tar)\n\toffset=`head -n 588 \"$0\" | wc -c | tr -d \" \"`\n\targ1=\"$2\"\n    if ! shift 2; then MS_Help; exit 1; fi\n\tfor s in $filesizes\n\tdo\n\t    MS_dd \"$0\" $offset $s | eval \"base64 --decode -i -\" | tar \"$arg1\" - \"$@\"\n\t    offset=`expr $offset + $s`\n\tdone\n\texit 0\n\t;;\n    --check)\n\tMS_Check \"$0\" y\n\texit 0\n\t;;\n    --confirm)\n\tverbose=y\n\tshift\n\t;;\n\t--noexec)\n\tscript=\"\"\n\tshift\n\t;;\n    --keep)\n\tkeep=y\n\tshift\n\t;;\n    --target)\n\tkeep=y\n\ttargetdir=\"${2:-.}\"\n    if ! shift 2; then MS_Help; exit 1; fi\n\t;;\n    --noprogress)\n\tnoprogress=y\n\tshift\n\t;;\n    --nox11)\n\tnox11=y\n\tshift\n\t;;\n    --nochown)\n\townership=n\n\tshift\n\t;;\n    --nodiskspace)\n\tnodiskspace=y\n\tshift\n\t;;\n    --xwin)\n\tif test \"n\" = n; then\n\t\tfinish=\"echo Press Return to close this window...; read junk\"\n\tfi\n\txterm_loop=1\n\tshift\n\t;;\n    --phase2)\n\tcopy=phase2\n\tshift\n\t;;\n    --)\n\tshift\n\tbreak ;;\n    -*)\n\techo Unrecognized flag : \"$1\" >&2\n\tMS_Help\n\texit 1\n\t;;\n    *)\n\tbreak ;;\n    esac\ndone\n\nif test x\"$quiet\" = xy -a x\"$verbose\" = xy; then\n\techo Cannot be verbose and quiet at the same time. >&2\n\texit 1\nfi\n\nif test x\"n\" = xy -a `id -u` -ne 0; then\n\techo \"Administrative privileges required for this archive (use su or sudo)\" >&2\n\texit 1\t\nfi\n\nif test x\"$copy\" \\!= xphase2; then\n    MS_PrintLicense\nfi\n\ncase \"$copy\" in\ncopy)\n    tmpdir=\"$TMPROOT\"/makeself.$RANDOM.`date +\"%y%m%d%H%M%S\"`.$$\n    mkdir \"$tmpdir\" || {\n\techo \"Could not create temporary directory $tmpdir\" >&2\n\texit 1\n    }\n    SCRIPT_COPY=\"$tmpdir/makeself\"\n    echo \"Copying to a temporary location...\" >&2\n    cp \"$0\" \"$SCRIPT_COPY\"\n    chmod +x \"$SCRIPT_COPY\"\n    cd \"$TMPROOT\"\n    exec \"$SCRIPT_COPY\" --phase2 -- $initargs\n    ;;\nphase2)\n    finish=\"$finish ; rm -rf `dirname $0`\"\n    ;;\nesac\n\nif test x\"$nox11\" = xn; then\n    if tty -s; then                 # Do we have a terminal?\n\t:\n    else\n        if test x\"$DISPLAY\" != x -a x\"$xterm_loop\" = x; then  # No, but do we have X?\n            if xset q > /dev/null 2>&1; then # Check for valid DISPLAY variable\n                GUESS_XTERMS=\"xterm gnome-terminal rxvt dtterm eterm Eterm xfce4-terminal lxterminal kvt konsole aterm terminology\"\n                for a in $GUESS_XTERMS; do\n                    if type $a >/dev/null 2>&1; then\n                        XTERM=$a\n                        break\n                    fi\n                done\n                chmod a+x $0 || echo Please add execution rights on $0\n                if test `echo \"$0\" | cut -c1` = \"/\"; then # Spawn a terminal!\n                    exec $XTERM -title \"$label\" -e \"$0\" --xwin \"$initargs\"\n                else\n                    exec $XTERM -title \"$label\" -e \"./$0\" --xwin \"$initargs\"\n                fi\n            fi\n        fi\n    fi\nfi\n\nif test x\"$targetdir\" = x.; then\n    tmpdir=\".\"\nelse\n    if test x\"$keep\" = xy; then\n\tif test x\"$nooverwrite\" = xy && test -d \"$targetdir\"; then\n            echo \"Target directory $targetdir already exists, aborting.\" >&2\n            exit 1\n\tfi\n\tif test x\"$quiet\" = xn; then\n\t    echo \"Creating directory $targetdir\" >&2\n\tfi\n\ttmpdir=\"$targetdir\"\n\tdashp=\"-p\"\n    else\n\ttmpdir=\"$TMPROOT/selfgz$$$RANDOM\"\n\tdashp=\"\"\n    fi\n    mkdir $dashp \"$tmpdir\" || {\n\techo ''Cannot create target directory'' $tmpdir >&2\n\techo ''You should try option --target dir'' >&2\n\teval $finish\n\texit 1\n    }\nfi\n\nlocation=\"`pwd`\"\nif test x\"$SETUP_NOCHECK\" != x1; then\n    MS_Check \"$0\"\nfi\noffset=`head -n 588 \"$0\" | wc -c | tr -d \" \"`\n\nif test x\"$verbose\" = xy; then\n\tMS_Printf \"About to extract 60 KB in $tmpdir ... Proceed ? [Y/n] \"\n\tread yn\n\tif test x\"$yn\" = xn; then\n\t\teval $finish; exit 1\n\tfi\nfi\n\nif test x\"$quiet\" = xn; then\n\tMS_Printf \"Uncompressing $label\"\n\t\n    # Decrypting with openssl will ask for password,\n    # the prompt needs to start on new line\n\tif test x\"n\" = xy; then\n\t    echo\n\tfi\nfi\nres=3\nif test x\"$keep\" = xn; then\n    trap ''echo Signal caught, cleaning up >&2; cd $TMPROOT; /bin/rm -rf \"$tmpdir\"; eval $finish; exit 15'' 1 2 3 15\nfi\n\nif test x\"$nodiskspace\" = xn; then\n    leftspace=`MS_diskspace \"$tmpdir\"`\n    if test -n \"$leftspace\"; then\n        if test \"$leftspace\" -lt 60; then\n            echo\n            echo \"Not enough space left in \"`dirname $tmpdir`\" ($leftspace KB) to decompress $0 (60 KB)\" >&2\n            echo \"Use --nodiskspace option to skip this check and proceed anyway\" >&2\n            if test x\"$keep\" = xn; then\n                echo \"Consider setting TMPDIR to a directory with more free space.\"\n            fi\n            eval $finish; exit 1\n        fi\n    fi\nfi\n\nfor s in $filesizes\ndo\n    if MS_dd_Progress \"$0\" $offset $s | eval \"base64 --decode -i -\" | ( cd \"$tmpdir\"; umask $ORIG_UMASK ; UnTAR xp ) 1>/dev/null; then\n\t\tif test x\"$ownership\" = xy; then\n\t\t\t(cd \"$tmpdir\"; chown -R `id -u` .;  chgrp -R `id -g` .)\n\t\tfi\n    else\n\t\techo >&2\n\t\techo \"Unable to decompress $0\" >&2\n\t\teval $finish; exit 1\n    fi\n    offset=`expr $offset + $s`\ndone\nif test x\"$quiet\" = xn; then\n\techo\nfi\n\ncd \"$tmpdir\"\nres=0\nif test x\"$script\" != x; then\n    if test x\"$export_conf\" = x\"y\"; then\n        MS_BUNDLE=\"$0\"\n        MS_LABEL=\"$label\"\n        MS_SCRIPT=\"$script\"\n        MS_SCRIPTARGS=\"$scriptargs\"\n        MS_ARCHDIRNAME=\"$archdirname\"\n        MS_KEEP=\"$KEEP\"\n        MS_NOOVERWRITE=\"$NOOVERWRITE\"\n        MS_COMPRESS=\"$COMPRESS\"\n        export MS_BUNDLE MS_LABEL MS_SCRIPT MS_SCRIPTARGS\n        export MS_ARCHDIRNAME MS_KEEP MS_NOOVERWRITE MS_COMPRESS\n    fi\n\n    if test x\"$verbose\" = x\"y\"; then\n\t\tMS_Printf \"OK to execute: $script $scriptargs $* ? [Y/n] \"\n\t\tread yn\n\t\tif test x\"$yn\" = x -o x\"$yn\" = xy -o x\"$yn\" = xY; then\n\t\t\teval \"\\\"$script\\\" $scriptargs \\\"\\$@\\\"\"; res=$?;\n\t\tfi\n    else\n\t\teval \"\\\"$script\\\" $scriptargs \\\"\\$@\\\"\"; res=$?\n    fi\n    if test \"$res\" -ne 0; then\n\t\ttest x\"$verbose\" = xy && echo \"The program ''$script'' returned an error code ($res)\" >&2\n    fi\nfi\nif test x\"$keep\" = xn; then\n    cd \"$TMPROOT\"\n    /bin/rm -rf \"$tmpdir\"\nfi\neval $finish; exit $res\nLi8AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADAwMDA3NTUAMDAwMTc1\nMAAwMDAxNzUwADAwMDAwMDAwMDAwADEzNzUyNTQyNTcxADAwNzcxMgAgNQAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAB1c3RhciAgAHBhdWwAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAcGF1bAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAu\nL2xmc2hzbS5zaAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAMDAwMDc1NQAwMDAxNzUw\nADAwMDE3NTAAMDAwMDAwMDQxNzEAMTM3NDMzMDQ3MTIAMDExNTQxACAwAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAHVzdGFyICAAcGF1bAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAABwYXVsAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACMh\nL2Jpbi9iYXNoCgojIGFyZzogJDEgPSBsZnNzZXJ2ZXIKIyBhcmc6ICQyID0gc3RvcmFnZSBhY2Nv\ndW50CiMgYXJnOiAkMyA9IHN0b3JhZ2Uga2V5CiMgYXJnOiAkNCA9IHN0b3JhZ2UgY29udGFpbmVy\nCiMgYXJnOiAkNSA9IGx1c3RyZSB2ZXJzaW9uIChkZWZhdWx0IDIuMTApCm1hc3Rlcj0kMQpzdG9y\nYWdlX2FjY291bnQ9JDIKc3RvcmFnZV9rZXk9JDMKc3RvcmFnZV9jb250YWluZXI9JDQKbHVzdHJl\nX3ZlcnNpb249JHs1LTIuMTB9CgojIGFkZGluZyBrZXJuZWwgbW9kdWxlIGZvciBsdXN0cmUgY2xp\nZW50CmlmIFsgIiRsdXN0cmVfdmVyc2lvbiIgPSAiMi4xMCIgXTsgdGhlbgogICAgeXVtIGluc3Rh\nbGwgLXkga21vZC1sdXN0cmUtY2xpZW50CiAgICB3ZWFrLW1vZHVsZXMgLS1hZGQta2VybmVsICQo\ndW5hbWUgLXIpCmZpCgppZiAhIHJwbSAtcSBsZW11ci1henVyZS1oc20tYWdlbnQgbGVtdXItYXp1\ncmUtZGF0YS1tb3ZlcnM7IHRoZW4KICAgIHl1bSAteSBpbnN0YWxsIFwKICAgICAgICBodHRwczov\nL2F6dXJlaHBjLmF6dXJlZWRnZS5uZXQvcnBtcy9sZW11ci1henVyZS1oc20tYWdlbnQtMS4wLjAt\nbHVzdHJlXyR7bHVzdHJlX3ZlcnNpb259Lng4Nl82NC5ycG0gXAogICAgICAgIGh0dHBzOi8vYXp1\ncmVocGMuYXp1cmVlZGdlLm5ldC9ycG1zL2xlbXVyLWF6dXJlLWRhdGEtbW92ZXJzLTEuMC4wLWx1\nc3RyZV8ke2x1c3RyZV92ZXJzaW9ufS54ODZfNjQucnBtCmZpCgpta2RpciAtcCAvdmFyL3J1bi9s\naHNtZApjaG1vZCA3NTUgL3Zhci9ydW4vbGhzbWQKCm1rZGlyIC1wIC9ldGMvbGhzbWQKY2htb2Qg\nNzU1IC9ldGMvbGhzbWQKCmNhdCA8PEVPRiA+L2V0Yy9saHNtZC9hZ2VudAojIEx1c3RyZSBOSUQg\nYW5kIGZpbGVzeXN0ZW0gbmFtZSBmb3IgdGhlIGZyb250IGVuZCBmaWxlc3lzdGVtLCB0aGUgYWdl\nbnQgd2lsbCBtb3VudCB0aGlzCmNsaWVudF9kZXZpY2U9IiR7bWFzdGVyfUB0Y3A6L0x1c3RyZUZT\nIgoKIyBEbyB5b3Ugd2FudCB0byB1c2UgUzMgYW5kIFBPU0lYLCBpbiB0aGlzIGV4YW1wbGUgd2Ug\ndXNlIFBPU0lYCmVuYWJsZWRfcGx1Z2lucz1bImxoc20tcGx1Z2luLWF6Il0KCiMjIERpcmVjdG9y\neSB0byBsb29rIGZvciB0aGUgcGx1Z2lucwpwbHVnaW5fZGlyPSIvdXNyL2xpYmV4ZWMvbGhzbWQi\nCgojIFRCRCwgSSB1c2VkIDE2CmhhbmRsZXJfY291bnQ9MTYKCiMgVEJECnNuYXBzaG90cyB7CiAg\nICAgICAgZW5hYmxlZCA9IGZhbHNlCn0KRU9GCmNobW9kIDYwMCAvZXRjL2xoc21kL2FnZW50Cgpj\nYXQgPDxFT0YgPi9ldGMvbGhzbWQvbGhzbS1wbHVnaW4tYXoKYXpfc3RvcmFnZV9hY2NvdW50ID0g\nIiRzdG9yYWdlX2FjY291bnQiCmF6X3N0b3JhZ2Vfa2V5ID0gIiRzdG9yYWdlX2tleSIKCm51bV90\naHJlYWRzID0gMzIKCiMKIyBPbmUgb3IgbW9yZSBhcmNoaXZlIGRlZmluaXRpb24gaXMgcmVxdWly\nZWQuCiMKYXJjaGl2ZSAgImF6LWJsb2IiIHsKICAgIGlkID0gMSAgICAgICAgICAgICAgICAgICAg\nICAgICAgICMgTXVzdCBiZSB1bmlxdWUgdG8gdGhpcyBlbmRwb2ludAogICAgY29udGFpbmVyID0g\nIiRzdG9yYWdlX2NvbnRhaW5lciIgIyBDb250YWluZXIgdXNlZCBmb3IgdGhpcyBhcmNoaXZlCiAg\nICBwcmVmaXggPSAiIiAgICAgICAgICAgICAgICAgICAjIE9wdGlvbmFsIHByZWZpeAogICAgbnVt\nX3RocmVhZHMgPSAzMgp9CkVPRgpjaG1vZCA2MDAgL2V0Yy9saHNtZC9saHNtLXBsdWdpbi1hegoK\nY2F0IDw8RU9GID4vZXRjL3N5c3RlbWQvc3lzdGVtL2xoc21kLnNlcnZpY2UKW1VuaXRdCkRlc2Ny\naXB0aW9uPVRoZSBsaHNtZCBzZXJ2ZXIKQWZ0ZXI9c3lzbG9nLnRhcmdldCBuZXR3b3JrLnRhcmdl\ndCByZW1vdGUtZnMudGFyZ2V0IG5zcy1sb29rdXAudGFyZ2V0CgpbU2VydmljZV0KVHlwZT1zaW1w\nbGUKUElERmlsZT0vcnVuL2xoc21kLnBpZApFeGVjU3RhcnRQcmU9L2Jpbi9ta2RpciAtcCAvdmFy\nL3J1bi9saHNtZApFeGVjU3RhcnQ9L3NiaW4vbGhzbWQgLWNvbmZpZyAvZXRjL2xoc21kL2FnZW50\nClJlc3RhcnQ9YWx3YXlzCgpbSW5zdGFsbF0KV2FudGVkQnk9bXVsdGktdXNlci50YXJnZXQKRU9G\nCmNobW9kIDYwMCAvZXRjL3N5c3RlbWQvc3lzdGVtL2xoc21kLnNlcnZpY2UKCnN5c3RlbWN0bCBk\nYWVtb24tcmVsb2FkCnN5c3RlbWN0bCBlbmFibGUgbGhzbWQKc3lzdGVtY3RsIHN0YXJ0IGxoc21k\nCgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAuL2NyZWF0\nZV9yYWlkMC5zaAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAMDAwMDc1NQAwMDAxNzUwADAwMDE3\nNTAAMDAwMDAwMDE2NjAAMTM3NDM3Mjc1MjYAMDEyNjAzACAwAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAHVzdGFyICAAcGF1bAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAABwYXVsAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACMhL2Jpbi9i\nYXNoCgojIGFyZzogJDEgPSByYWlkX2RldmljZSAoZS5nLiAvZGV2L21kMTApCiMgYXJnOiAkKiA9\nIGRldmljZXMgdG8gdXNlIChjYW4gdXNlIGdsb2JiaW5nKQoKcmFpZF9kZXZpY2U9JDEKc2hpZnQK\nCmRldmljZXM9CndoaWxlICgoICIkIyIgKSk7IGRvCiAgICBkZXZpY2VzPSIkZGV2aWNlcyAkMSIK\nICAgIHNoaWZ0CmRvbmUKCmVjaG8gImRldmljZXM9JGRldmljZXMiCgojIHByaW50IHBhcnRpdGlv\nbiBpbmZvcm1hdGlvbgpwYXJ0ZWQgLXMgLS1saXN0IDI+L2Rldi9udWxsCgojIGNyZWF0aW5nIHRo\nZSBwYXJ0aXRpb25zCmZvciBkaXNrIGluICRkZXZpY2VzOyBkbwogICAgZWNobyAicGFydGl0aW9u\naW5nICRkaXNrIgogICAgcGFydGVkIC1zICRkaXNrICJta2xhYmVsIGdwdCIKICAgIHBhcnRlZCAt\ncyAkZGlzayAtYSBvcHRpbWFsICJta3BhcnQgcHJpbWFyeSAxIC0xIgogICAgcGFydGVkIC1zICRk\naXNrIHByaW50CiAgICBwYXJ0ZWQgLXMgJGRpc2sgInNldCAxIHJhaWQgb24iCmRvbmUKCiMgbWFr\nZSBzdXJlIGFsbCB0aGUgcGFydGl0aW9ucyBhcmUgcmVhZHkKc2xlZXAgMTAKIyBnZXQgdGhlIHBh\ncnRpdGlvbiBuYW1lcwpwYXJ0aXRpb25zPQpmb3IgZGlzayBpbiAkZGV2aWNlczsgZG8KICAgIHBh\ncnRpdGlvbnM9IiRwYXJ0aXRpb25zICQobHNibGsgLW5vIGtuYW1lIC1wICRkaXNrIHwgdGFpbCAt\nbjEpIgpkb25lCmVjaG8gInBhcnRpdGlvbnM9JHBhcnRpdGlvbnMiCgpuZGV2aWNlcz0kKGVjaG8g\nJHBhcnRpdGlvbnMgfCB3YyAtdykKCmVjaG8gImNyZWF0aW5nIHJhaWQgZGV2aWNlIgptZGFkbSAt\nLWNyZWF0ZSAkcmFpZF9kZXZpY2UgLS1sZXZlbCAwIC0tcmFpZC1kZXZpY2VzICRuZGV2aWNlcyAk\ncGFydGl0aW9ucyB8fCBleGl0IDEKc2xlZXAgMTAKCm1kYWRtIC0tdmVyYm9zZSAtLWRldGFpbCAt\nLXNjYW4gPiAvZXRjL21kYWRtLmNvbmYKAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAuL2xmc29zcy5z\naAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAMDAwMDc1NQAwMDAxNzUwADAwMDE3NTAA\nMDAwMDAwMDExMjQAMTM3NTMxMTYyMDAAMDExNTQzACAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAHVzdGFyICAAcGF1bAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAABwYXVsAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACMhL2Jpbi9iYXNo\nCgojIGFyZzogJDEgPSBsZnNtYXN0ZXIKIyBhcmc6ICQyID0gZGV2aWNlIChlLmcuIEw9L2Rldi9z\nZGIgTHYyPS9kZXYvbnZtZTBuMSkKIyBhcmc6ICQzID0gc3RhcnQgaW5kZXgKbWFzdGVyPSQxCmRl\ndmljZXM9JDIKaW5kZXg9JDMKCm5kZXZpY2VzPSQod2MgLXcgPDw8JGRldmljZXMpCgpmb3IgZGV2\naWNlIGluICRkZXZpY2VzOyBkbwoKICAgIG1rZnMubHVzdHJlIFwKICAgICAgICAtLWZzbmFtZT1M\ndXN0cmVGUyBcCiAgICAgICAgLS1iYWNrZnN0eXBlPWxkaXNrZnMgXAogICAgICAgIC0tcmVmb3Jt\nYXQgXAogICAgICAgIC0tb3N0IFwKICAgICAgICAtLW1nc25vZGU9JG1hc3RlciBcCiAgICAgICAg\nLS1pbmRleD0kaW5kZXggXAogICAgICAgIC0tbW91bnRmc29wdGlvbnM9ImVycm9ycz1yZW1vdW50\nLXJvIiBcCiAgICAgICAgJGRldmljZQoKICAgIG1rZGlyIC9tbnQvb3NzJHtpbmRleH0KICAgIGVj\naG8gIiRkZXZpY2UgL21udC9vc3Mke2luZGV4fSBsdXN0cmUgbm9hdGltZSxub2RpcmF0aW1lLG5v\nYmFycmllciAwIDIiID4+IC9ldGMvZnN0YWIKCiAgICBpbmRleD0kKCggJGluZGV4ICsgMSApKQoK\nZG9uZQoKbW91bnQgLWEKAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAuL2xmc2xvZ2FuYWx5\ndGljcy5zaAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAMDAwMDc1NQAwMDAxNzUwADAwMDE3NTAAMDAw\nMDAwMDEzNzcAMTM3NDMzMDQ3MTIAMDEzNDUwACAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAHVzdGFyICAAcGF1bAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABw\nYXVsAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACMhL2Jpbi9iYXNoCgoj\nIGFyZzogJDEgPSBuYW1lCiMgYXJnOiAkMiA9IGxvZyBhbmFseXRpY3Mgd29ya3NwYWNlIGlkCiMg\nYXJnOiAkMyA9IGxvZyBhbmFseXRpY3Mga2V5CgpuYW1lPSQxCmxvZ19hbmFseXRpY3Nfd29ya3Nw\nYWNlX2lkPSQyCmxvZ19hbmFseXRpY3Nfa2V5PSQzCgpESVI9IiQoIGNkICIkKCBkaXJuYW1lICIk\ne0JBU0hfU09VUkNFWzBdfSIgKSIgJiYgcHdkICkiCgpzZWQgInMjX19GU19OQU1FX18jJHtuYW1l\nfSNnO3MjX19MT0dfQU5BTFlUSUNTX1dPUktTUEFDRV9JRF9fIyR7bG9nX2FuYWx5dGljc193b3Jr\nc3BhY2VfaWR9I2c7cyNfX0xPR19BTkFMWVRJQ1NfS0VZX18jJHtsb2dfYW5hbHl0aWNzX2tleX0j\nZyIgICRESVIvbGZzbG9nYW5hbHl0aWNzZC5zaC5pbiA+L3Vzci9iaW4vbGZzbG9nYW5hbHl0aWNz\nZC5zaAoKY2htb2QgK3ggL3Vzci9iaW4vbGZzbG9nYW5hbHl0aWNzZC5zaAoKY2F0IDw8RU9GID4v\nbGliL3N5c3RlbWQvc3lzdGVtL2xmc2xvZ2FuYWx5dGljcy5zZXJ2aWNlCltVbml0XQpEZXNjcmlw\ndGlvbj1MdXN0cmUgbG9nZ2luZyBzZXJ2aWNlIHRvIExvZyBBbmFseXRpY3MuCgpbU2VydmljZV0K\nVHlwZT1zaW1wbGUKRXhlY1N0YXJ0PS9iaW4vYmFzaCAvdXNyL2Jpbi9sZnNsb2dhbmFseXRpY3Nk\nLnNoClJlc3RhcnQ9YWx3YXlzCgpbSW5zdGFsbF0KV2FudGVkQnk9bXVsdGktdXNlci50YXJnZXQK\nRU9GCgpzeXN0ZW1jdGwgZW5hYmxlIGxmc2xvZ2FuYWx5dGljcwpzeXN0ZW1jdGwgc3RhcnQgbGZz\nbG9nYW5hbHl0aWNzAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAuL2Rpc2FibGUtc2VsaW51\neC5zaAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAMDAwMDc1NQAwMDAxNzUwADAwMDE3NTAAMDAwMDAw\nMDAxMzAAMTM3NDMzMDQ3MTIAMDEzMzI0ACAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAHVzdGFyICAAcGF1bAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABwYXVs\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACMhL2Jpbi9iYXNoCgpzZXRl\nbmZvcmNlIDAKc2VkIC1pICdzL1NFTElOVVg9LiokL1NFTElOVVg9ZGlzYWJsZWQvZycgL2V0Yy9z\nZWxpbnV4L2NvbmZpZwoAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAALi9zZXR1cF9sdXN0cmUuc2gA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADAwMDA3NTUAMDAwMTc1MAAwMDAxNzUwADAwMDAwMDA0\nNzI2ADEzNzUzMTI2MTIzADAxMzAxMAAgMAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAB1c3RhciAgAHBhdWwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAcGF1bAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAjIS9iaW4vYmFzaAoKZXhlYyA+\nIC92YXIvbG9nL3NldHVwX2x1c3RyZS5sb2cgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg\nICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCmV4ZWMgMj4mMQoKc2NyaXB0\nX2Rpcj0iJCggY2QgIiQoIGRpcm5hbWUgIiR7QkFTSF9TT1VSQ0VbMF19IiApIiA+L2Rldi9udWxs\nIDI+JjEgJiYgcHdkICkiCmVjaG8gInNjcmlwdF9kaXIgPSAkc2NyaXB0X2RpciIKCm1kcz0iJDEi\nCnN0b3JhZ2VfYWNjb3VudD0iJDIiIApzdG9yYWdlX2tleT0iJDMiCnN0b3JhZ2VfY29udGFpbmVy\nPSIkNCIKbG9nX2FuYWx5dGljc19uYW1lPSIkNSIKbG9nX2FuYWx5dGljc193b3Jrc3BhY2VfaWQ9\nIiQ2Igpsb2dfYW5hbHl0aWNzX2tleT0iJDciCm9zc19kaXNrX3NldHVwPSIkOCIKCiMgdmFycyB1\nc2VkIGluIHNjcmlwdAppZiBbIC1lIC9kZXYvbnZtZTBuMSBdOyB0aGVuCglkZXZpY2VzPScvZGV2\nL252bWUqbjEnCgluX2RldmljZXM9JChlY2hvICRkZXZpY2VzIHwgd2MgLXcpCgllY2hvICJVc2lu\nZyAkbl9kZXZpY2VzIE5WTUUgZGV2aWNlcyIKZWxpZiBbIC1lIC9kZXYvc2RjIF07IHRoZW4KCWRl\ndmljZXM9Jy9kZXYvc2RbYy1tXScKCW5fZGV2aWNlcz0kKGVjaG8gJGRldmljZXMgfCB3YyAtdykK\nCWVjaG8gIlVzaW5nICRuX2RldmljZXMgTlZNRSBkZXZpY2VzIgplbHNlCgllY2hvICJFUlJPUjog\nY2Fubm90IGZpbmQgZGV2aWNlcyBmb3Igc3RvcmFnZSIKCWV4aXQgMQpmaQoKbHVzdHJlX3ZlcnNp\nb249Mi4xMgoKaWYgWyAiJHN0b3JhZ2VfYWNjb3VudCIgPSAiIiBdOyB0aGVuCgl1c2VfaHNtPWZh\nbHNlCmVsc2UKCXVzZV9oc209dHJ1ZQpmaQoKaWYgWyAiJGxvZ19hbmFseXRpY3NfbmFtZSIgPSAi\nIiBdOyB0aGVuCgl1c2VfbG9nX2FuYWx5dGljcz1mYWxzZQplbHNlCgl1c2VfbG9nX2FuYWx5dGlj\ncz10cnVlCmZpCgppZiBbWyAiJG5fZGV2aWNlcyIgLWd0ICIxIiAmJiAoICIkb3NzX2Rpc2tfc2V0\ndXAiID0gInJhaWQiIHx8ICIkSE9TVE5BTUUiID0gIiRtZHMiICkgXV07IHRoZW4KCWRldmljZT0v\nZGV2L21kMTAKCWVjaG8gImNyZWF0aW5nIHJhaWQgKCRkZXZpY2UpIGZyb20gJG5fZGV2aWNlcyBk\nZXZpY2VzIDogJGRldmljZXMiCgkkc2NyaXB0X2Rpci9jcmVhdGVfcmFpZDAuc2ggJGRldmljZSAk\nZGV2aWNlcwoJZGV2aWNlcz0kZGV2aWNlCgluX2RldmljZXM9MQpmaQoKZWNobyAidXNpbmcgJG5f\nZGV2aWNlcyBkZXZpY2UocykgOiAkZGV2aWNlcyIKCgojIFNFVFVQIExVU1RSRSBZVU0gUkVQTwoj\nJHNjcmlwdF9kaXIvbGZzcmVwby5zaCAkbHVzdHJlX3ZlcnNpb24KCiMgSU5TVEFMTCBMVVNUUkUg\nUEFDS0FHRVMKIyRzY3JpcHRfZGlyL2xmc3BrZ3Muc2gKCm9zdF9pbmRleD0xCgppZiBbICIkSE9T\nVE5BTUUiID0gIiRtZHMiIF07IHRoZW4KCgkjIFNFVFVQIE1EUwoJJHNjcmlwdF9kaXIvbGZzbWFz\ndGVyLnNoICRkZXZpY2VzCgplbHNlCgoJZWNobyAid2FpdCBmb3IgdGhlIG1kcyB0byBzdGFydCIK\nCW1vZHByb2JlIGx1c3RyZQoJd2hpbGUgISBsY3RsIHBpbmcgJG1kc0B0Y3A7IGRvCgkJc2xlZXAg\nMgoJZG9uZQoKCglpZHg9MAoJZm9yIGMgaW4gJChlY2hvICR7SE9TVE5BTUUjIyRtZHN9IHwgZ3Jl\ncCAtbyAuKTsgZG8KCQllY2hvICRjCQkKCQlpZHg9JCgoJGlkeCAqIDM2KSkKCQlpZiBbIC16ICIk\ne2MjI1swLTldfSIgXTsgdGhlbgoJCQlpZHg9JCgoJGlkeCArICRjKSkKCQllbHNlCgkJCWlkeD0k\nKCgkKHByaW50ZiAiJGlkeCArIDEwICsgJWQgLSAlZCIgIicke2NeXn0iICInQSIpKSkKCQlmaQoJ\nZG9uZQoJCglvc3RfaW5kZXg9JCgoICggJGlkeCAqICRuX2RldmljZXMgKSArIDEgKSkKCgllY2hv\nICJzdGFydGluZyBvc3QgaW5kZXg9JG9zdF9pbmRleCIKCgltZHNfaXA9JChwaW5nIC1jIDEgJG1k\ncyB8IGhlYWQgLTEgfCBzZWQgJ3MvXlteKV0qKC8vZztzLykuKiQvL2cnKQoKCSRzY3JpcHRfZGly\nL2xmc29zcy5zaCAkbWRzX2lwICIkZGV2aWNlcyIgJG9zdF9pbmRleAoKZmkKCmlmIFsgIiR7dXNl\nX2hzbSwsfSIgPSAidHJ1ZSIgXTsgdGhlbgoKCSRzY3JpcHRfZGlyL2xmc2hzbS5zaCAiJG1kc19p\ncCIgIiRzdG9yYWdlX2FjY291bnQiICIkc3RvcmFnZV9rZXkiICIkc3RvcmFnZV9jb250YWluZXIi\nICIkbHVzdHJlX3ZlcnNpb24iCgoJaWYgWyAiJEhPU1ROQU1FIiA9ICIkbWRzIiBdOyB0aGVuCgoJ\nCSMgSU1QT1JUIENPTlRBSU5FUgoJCSRzY3JpcHRfZGlyL2xmc2NsaWVudC5zaCAkbWRzX2lwIC9s\ndXN0cmUKCQkkc2NyaXB0X2Rpci9sZnNpbXBvcnQuc2ggIiRzdG9yYWdlX2FjY291bnQiICIkc3Rv\ncmFnZV9rZXkiICIkc3RvcmFnZV9jb250YWluZXIiIC9sdXN0cmUgIiRsdXN0cmVfdmVyc2lvbiIK\nCglmaQoKZmkKCmlmIFsgIiR7dXNlX2xvZ19hbmFseXRpY3MsLH0iID0gInRydWUiIF07IHRoZW4K\nCgkkc2NyaXB0X2Rpci9sZnNsb2dhbmFseXRpY3Muc2ggJGxvZ19hbmFseXRpY3NfbmFtZSAkbG9n\nX2FuYWx5dGljc193b3Jrc3BhY2VfaWQgIiRsb2dfYW5hbHl0aWNzX2tleSIKCmZpAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAALi9maXhfbHYyX25ldHdvcmsuc2gAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAADAwMDA3NTUAMDAwMTc1MAAwMDAxNzUwADAwMDAwMDAwMTIxADEz\nNzUyNTQyNjYxADAxMzM2NQAgMAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAB1c3RhciAgAHBhdWwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAcGF1bAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAjIS9iaW4vYmFzaAoKZXRodG9vbCAtTCBl\ndGgxIHR4IDggcnggOCAmJiBpZmNvbmZpZyBldGgxIGRvd24gJiYgaWZjb25maWcgZXRoMSB1cAoA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAC4vbGZzbWFzdGVyLnNoAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAwMDAwNzU1ADAwMDE3NTAAMDAwMTc1MAAwMDAwMDAwMTExNwAxMzc1\nMzEyMjI2NwAwMTIyNDYAIDAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAdXN0YXIgIABwYXVsAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAHBhdWwAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAIyEvYmluL2Jhc2gKCiMgYXJnOiAkMSA9IGRl\ndmljZSAoZS5nLiBMPS9kZXYvc2RiIEx2Mj0vZGV2L252bWUwbjEpCmRldmljZT0kMQoKbWtmcy5s\ndXN0cmUgLS1mc25hbWU9THVzdHJlRlMgLS1tZ3MgLS1tZHQgLS1tb3VudGZzb3B0aW9ucz0idXNl\ncl94YXR0cixlcnJvcnM9cmVtb3VudC1ybyIgLS1iYWNrZnN0eXBlPWxkaXNrZnMgLS1yZWZvcm1h\ndCAkZGV2aWNlIC0taW5kZXggMAoKbWtkaXIgL21udC9tZ3NtZHMKZWNobyAiJGRldmljZSAvbW50\nL21nc21kcyBsdXN0cmUgbm9hdGltZSxub2RpcmF0aW1lLG5vYmFycmllciAwIDIiID4+IC9ldGMv\nZnN0YWIKbW91bnQgLWEKCiMgc2V0IHVwIGhzbQpsY3RsIHNldF9wYXJhbSAtUCBtZHQuKi1NRFQw\nMDAwLmhzbV9jb250cm9sPWVuYWJsZWQKbGN0bCBzZXRfcGFyYW0gLVAgbWR0LiotTURUMDAwMC5o\nc20uZGVmYXVsdF9hcmNoaXZlX2lkPTEKbGN0bCBzZXRfcGFyYW0gbWR0LiotTURUMDAwMC5oc20u\nbWF4X3JlcXVlc3RzPTEyOAoKIyBhbGxvdyBhbnkgdXNlciBhbmQgZ3JvdXAgaWRzIHRvIHdyaXRl\nCmxjdGwgc2V0X3BhcmFtIG1kdC4qLU1EVDAwMDAuaWRlbnRpdHlfdXBjYWxsPU5PTkUKAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAC4vYWRkaXRpb25hbC1wa2dzLnNoAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAwMDAwNzU1ADAwMDE3NTAAMDAwMTc1MAAwMDAwMDAwMDA3NgAxMzc1MjQ0\nNzcyMQAwMTMzMjcAIDAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\ndXN0YXIgIABwYXVsAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAHBhdWwAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAIyEvYmluL2Jhc2gKCnl1bSBpbnN0YWxsIC15IGVw\nZWwtcmVsZWFzZQp5dW0gaW5zdGFsbCAteSBkc3RhdAoAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAuL2xmc3JlcG8uc2gAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAMDAwMDc1NQAwMDAxNzUwADAwMDE3NTAAMDAwMDAwMDEwMTAAMTM3NDMzMDQ3\nMTIAMDExNzA0ACAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAHVz\ndGFyICAAcGF1bAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABwYXVsAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACMhL2Jpbi9iYXNoCmx1c3RyZV92ZXJzaW9uPSR7MS0y\nLjEwfQoKY2F0IDw8IEVPRiA+L2V0Yy95dW0ucmVwb3MuZC9MdXN0cmVQYWNrLnJlcG8KW2x1c3Ry\nZXNlcnZlcl0KbmFtZT1sdXN0cmVzZXJ2ZXIKYmFzZXVybD1odHRwczovL2Rvd25sb2Fkcy53aGFt\nY2xvdWQuY29tL3B1YmxpYy9sdXN0cmUvbGF0ZXN0LSR7bHVzdHJlX3ZlcnNpb259LXJlbGVhc2Uv\nZWw3L3BhdGNobGVzcy1sZGlza2ZzLXNlcnZlci8KZW5hYmxlZD0xCmdwZ2NoZWNrPTAKCltlMmZz\nXQpuYW1lPWUyZnMKYmFzZXVybD1odHRwczovL2Rvd25sb2Fkcy53aGFtY2xvdWQuY29tL3B1Ymxp\nYy9lMmZzcHJvZ3MvbGF0ZXN0L2VsNy8KZW5hYmxlZD0xCmdwZ2NoZWNrPTAKCltsdXN0cmVjbGll\nbnRdCm5hbWU9bHVzdHJlY2xpZW50CmJhc2V1cmw9aHR0cHM6Ly9kb3dubG9hZHMud2hhbWNsb3Vk\nLmNvbS9wdWJsaWMvbHVzdHJlL2xhdGVzdC0ke2x1c3RyZV92ZXJzaW9ufS1yZWxlYXNlL2VsNy9j\nbGllbnQvCmVuYWJsZWQ9MQpncGdjaGVjaz0wCkVPRgoAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAuL2xmc3BrZ3Muc2gAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAMDAwMDc1NQAwMDAxNzUwADAwMDE3NTAAMDAwMDAwMDA0NTIAMTM3NDMzMDQ3MTIA\nMDExNzE0ACAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAHVzdGFy\nICAAcGF1bAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABwYXVsAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAACMhL2Jpbi9iYXNoCgp5dW0gLXkgaW5zdGFsbCBsdXN0cmUg\na21vZC1sdXN0cmUtb3NkLWxkaXNrZnMgbHVzdHJlLW9zZC1sZGlza2ZzLW1vdW50IGx1c3RyZS1y\nZXNvdXJjZS1hZ2VudHMgZTJmc3Byb2dzIGx1c3RyZS10ZXN0cwoKc2VkIC1pICdzL1Jlc291cmNl\nRGlza1wuRm9ybWF0PXkvUmVzb3VyY2VEaXNrLkZvcm1hdD1uL2cnIC9ldGMvd2FhZ2VudC5jb25m\nCgpzeXN0ZW1jdGwgcmVzdGFydCB3YWFnZW50Cgp3ZWFrLW1vZHVsZXMgLS1hZGQta2VybmVsIC0t\nbm8taW5pdHJhbWZzCgp1bW91bnQgL21udC9yZXNvdXJjZQoAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAALi9sZnNpbXBvcnQuc2gAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAADAwMDA3NTUAMDAwMTc1MAAwMDAxNzUwADAwMDAwMDAxMzQ3ADEzNzQzMzA0NzEyADAx\nMjI2NgAgMAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAB1c3RhciAg\nAHBhdWwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAcGF1bAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAjIS9iaW4vYmFzaAoKIyBhcmc6ICQxID0gc3RvcmFnZSBhY2Nv\ndW50CiMgYXJnOiAkMiA9IHN0b3JhZ2Uga2V5CiMgYXJnOiAkMyA9IHN0b3JhZ2UgY29udGFpbmVy\nCiMgYXJnOiAkMyA9IGxmcyBtb3VudAojIGFyZzogJDQgPSBsdXN0cmUgbW91bnQgKGRlZmF1bHQ9\nL2x1c3RyZSkKIyBhcmc6ICQ1ID0gbHVzdHJlIHZlcnNpb24gKGRlZmF1bHQ9Mi4xMCkKc3RvcmFn\nZV9hY2NvdW50PSQxCnN0b3JhZ2Vfa2V5PSQyCnN0b3JhZ2VfY29udGFpbmVyPSQzCmxmc19tb3Vu\ndD0kezQ6LS9sdXN0cmV9Cmx1c3RyZV92ZXJzaW9uPSR7NS0yLjEwfQoKaWYgISBycG0gLXEgbGVt\ndXItYXp1cmUtaHNtLWFnZW50IGxlbXVyLWF6dXJlLWRhdGEtbW92ZXJzOyB0aGVuCiAgICB5dW0g\nLXkgaW5zdGFsbCBcCiAgICAgICAgaHR0cHM6Ly9henVyZWhwYy5henVyZWVkZ2UubmV0L3JwbXMv\nbGVtdXItYXp1cmUtaHNtLWFnZW50LTEuMC4wLWx1c3RyZV8ke2x1c3RyZV92ZXJzaW9ufS54ODZf\nNjQucnBtIFwKICAgICAgICBodHRwczovL2F6dXJlaHBjLmF6dXJlZWRnZS5uZXQvcnBtcy9sZW11\nci1henVyZS1kYXRhLW1vdmVycy0xLjAuMC1sdXN0cmVfJHtsdXN0cmVfdmVyc2lvbn0ueDg2XzY0\nLnJwbQpmaQoKY2QgJGxmc19tb3VudApleHBvcnQgU1RPUkFHRV9BQ0NPVU5UPSRzdG9yYWdlX2Fj\nY291bnQKZXhwb3J0IFNUT1JBR0VfS0VZPSRzdG9yYWdlX2tleQovc2Jpbi9henVyZS1pbXBvcnQg\nJHtzdG9yYWdlX2NvbnRhaW5lcn0KCgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAALi9sZnNjbGllbnQuc2gAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAADAwMDA3NTUAMDAwMTc1MAAwMDAxNzUwADAwMDAwMDAwNTYxADEzNzQzMzA0NzEyADAxMjIy\nNwAgMAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAB1c3RhciAgAHBh\ndWwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAcGF1bAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAjIS9iaW4vYmFzaAoKIyBhcmc6ICQxID0gbGZzc2VydmVyCiMgYXJn\nOiAkMiA9IG1vdW50IHBvaW50IChkZWZhdWx0OiAvbHVzdHJlKQptYXN0ZXI9JDEKbGZzX21vdW50\nPSR7MjotL2x1c3RyZX0KCmlmIFsgIiRsdXN0cmVfdmVyc2lvbiIgPSAiMi4xMCIgXTsgdGhlbgog\nICAgeXVtIGluc3RhbGwgLXkga21vZC1sdXN0cmUtY2xpZW50CiAgICB3ZWFrLW1vZHVsZXMgLS1h\nZGQta2VybmVsICQodW5hbWUgLXIpCmZpCgpta2RpciAkbGZzX21vdW50CmVjaG8gIiR7bWFzdGVy\nfUB0Y3AwOi9MdXN0cmVGUyAkbGZzX21vdW50IGx1c3RyZSBkZWZhdWx0cyxfbmV0ZGV2IDAgMCIg\nPj4gL2V0Yy9mc3RhYgptb3VudCAtYQpjaG1vZCA3NzcgJGxmc19tb3VudAoAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAC4vbGZzbG9nYW5hbHl0aWNzZC5zaC5pbgAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAwMDAwNjQ0ADAwMDE3NTAAMDAwMTc1MAAwMDAwMDAwMzYwNgAxMzc0MzMwNDcxMgAwMTQyMTMA\nIDAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAdXN0YXIgIABwYXVs\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAHBhdWwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAIyEvYmluL2Jhc2gKCmZzX25hbWU9X19GU19OQU1FX18Kd29ya3NwYWNl\nX2lkPV9fTE9HX0FOQUxZVElDU19XT1JLU1BBQ0VfSURfXwprZXk9Il9fTE9HX0FOQUxZVElDU19L\nRVlfXyIKCkRBVEU9YGRhdGUgJyslWS0lbS0lZCAlSDolTTolUydgCmVjaG8gIkx1c3RyZSBMb2cg\nQW5hbHl0aWNzIHNlcnZpY2Ugc3RhcnRlZCBhdCAke0RBVEV9IiB8IHN5c3RlbWQtY2F0IC1wIGlu\nZm8KCm1lPSQoaG9zdG5hbWUpCm5vZGU9JChscyAvcHJvYy9mcy9sdXN0cmUvb3NkLWxkaXNrZnMg\nfCBncmVwIEx1c3RyZUZTKQoKZXRoMD0kKGdyZXAgZXRoMCAvcHJvYy9uZXQvZGV2IHwgc2VkICdz\nLyAgKi8gL2cnKQpieXRlc3JlY3ZfbGFzdD0kKGN1dCAtZCcgJyAtZiAzIDw8PCIkZXRoMCIpCmJ5\ndGVzc2VuZF9sYXN0PSQoY3V0IC1kJyAnIC1mIDExIDw8PCIkZXRoMCIpCgp3aGlsZSB0cnVlCmRv\nCiAgICBzbGVlcCA2MDsKCiAgICBldGgwPSQoZ3JlcCBldGgwIC9wcm9jL25ldC9kZXYgfCBzZWQg\nJ3MvICAqLyAvZycpCiAgICBieXRlc3JlY3Y9JChjdXQgLWQnICcgLWYgMyA8PDwiJGV0aDAiKQog\nICAgYnl0ZXNzZW5kPSQoY3V0IC1kJyAnIC1mIDExIDw8PCIkZXRoMCIpCiAgICBieXRlc3JlY3Zf\naW50PSQoKCRieXRlc3JlY3YgLSAkYnl0ZXNyZWN2X2xhc3QpKQogICAgYnl0ZXNzZW5kX2ludD0k\nKCgkYnl0ZXNzZW5kIC0gJGJ5dGVzc2VuZF9sYXN0KSkKICAgIGJ5dGVzcmVjdl9sYXN0PSRieXRl\nc3JlY3YKICAgIGJ5dGVzc2VuZF9sYXN0PSRieXRlc3NlbmQKCiAgICBsb2FkYXZnPSQoY3V0IC1m\nMSAtZCcgJyA8IC9wcm9jL2xvYWRhdmcpCiAgICBrYnl0ZXNmcmVlPSQoPC9wcm9jL2ZzL2x1c3Ry\nZS9vc2QtbGRpc2tmcy8ke25vZGV9L2tieXRlc2ZyZWUpCgogICAgY29udGVudD0kKGNhdCA8PEVP\nRgp7CiAgICAiZnNuYW1lIjoiJGZzX25hbWUiLAogICAgImhvc3RuYW1lIjoiJG1lIiwKICAgICJ1\ndWlkIjoiJG5vZGUiLAogICAgImxvYWRhdmciOiRsb2FkYXZnLAogICAgImtieXRlc2ZyZWUiOiRr\nYnl0ZXNmcmVlLAogICAgImJ5dGVzc2VuZCI6JGJ5dGVzc2VuZF9pbnQsCiAgICAiYnl0ZXNyZWN2\nIjokYnl0ZXNyZWN2X2ludAp9CkVPRgogICAgKQoKICAgIGNvbnRlbnRfbGVuPSR7I2NvbnRlbnR9\nCgogICAgcmZjMTEyM2RhdGU9IiQoZGF0ZSAtdSArJWEsXCAlZFwgJWJcICVZXCAlSDolTTolU1wg\nR01UKSIKCiAgICBzdHJpbmdfdG9faGFzaD0iUE9TVFxuJHtjb250ZW50X2xlbn1cbmFwcGxpY2F0\naW9uL2pzb25cbngtbXMtZGF0ZToke3JmYzExMjNkYXRlfVxuL2FwaS9sb2dzIgogICAgdXRmOF90\nb19oYXNoPSQoZWNobyAtbiAiJHN0cmluZ190b19oYXNoIiB8IGljb252IC10IHV0ZjgpCgogICAg\nZGVjb2RlZF9oZXhfa2V5PSIkKGVjaG8gIiRrZXkiIHwgYmFzZTY0IC0tZGVjb2RlIC0td3JhcD0w\nIHwgeHhkIC1wIC1jMjU2KSIKICAgIHNpZ25hdHVyZT0iJChlY2hvIC1uZSAiJHV0ZjhfdG9faGFz\naCIgfCBvcGVuc3NsIGRnc3QgLXNoYTI1NiAtbWFjIEhNQUMgLW1hY29wdCAiaGV4a2V5OiRkZWNv\nZGVkX2hleF9rZXkiIC1iaW5hcnkgfCBiYXNlNjQpIgogICAgYXV0aF90b2tlbj0iU2hhcmVkS2V5\nICR3b3Jrc3BhY2VfaWQ6JHNpZ25hdHVyZSIKCiAgICBjdXJsIC1zIC1TIFwKICAgICAgICAtSCAi\nQ29udGVudC1UeXBlOiBhcHBsaWNhdGlvbi9qc29uIiBcCiAgICAgICAgLUggIkxvZy1UeXBlOiAk\nZnNfbmFtZSIgXAogICAgICAgIC1IICJBdXRob3JpemF0aW9uOiAkYXV0aF90b2tlbiIgXAogICAg\nICAgIC1IICJ4LW1zLWRhdGU6ICRyZmMxMTIzZGF0ZSIgXAogICAgICAgIC1YIFBPU1QgXAogICAg\nICAgIC0tZGF0YSAiJGNvbnRlbnQiIFwKICAgICAgICBodHRwczovLyR3b3Jrc3BhY2VfaWQub2Rz\nLm9waW5zaWdodHMuYXp1cmUuY29tL2FwaS9sb2dzP2FwaS12ZXJzaW9uPTIwMTYtMDQtMDEKCmRv\nbmUKAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\n')]",
    "copy": [
      {
        "name": "mdtDataDisks",
        "count": "[parameters('mdtNumDisks')]",
        "input": {
          "caching": "[parameters('mdtCacheOption')]",
          "managedDisk": {
            "storageAccountType": "[parameters('mdtStorageSku')]"
          },
          "createOption": "Empty",
          "lun": "[copyIndex('mdtDataDisks')]",
          "diskSizeGB": "[parameters('mdtDiskSize')]"
        }
      },
      {
        "name": "ostDataDisks",
        "count": "[parameters('ostNumDisks')]",
        "input": {
          "caching": "[parameters('ostCacheOption')]",
          "managedDisk": {
            "storageAccountType": "[parameters('ostStorageSku')]"
          },
          "createOption": "Empty",
          "lun": "[copyIndex('ostDataDisks')]",
          "diskSizeGB": "[parameters('ostDiskSize')]"
        }
      }
    ]
  },
  "resources": [
    {
      "name": "[concat(parameters('name'), '-NetworkInterface')]",
      "type": "Microsoft.Network/networkInterfaces",
      "apiVersion": "2018-08-01",
      "location": "[resourceGroup().location]",
      "tags": {
        "filesystem": "[variables('tagname')]"
      },
      "properties": {
        "enableAcceleratedNetworking": true,
        "ipConfigurations": [
          {
            "name": "ipConfig",
            "properties": {
              "privateIPAllocationMethod": "Dynamic",
              "subnet": {
                "id": "[variables('subnet')]"
              }
            }
          }
        ]
      }
    },
    {
      "name": "[parameters('name')]",
      "type": "Microsoft.Compute/virtualMachines",
      "apiVersion": "2017-03-30",
      "location": "[resourceGroup().location]",
      "dependsOn": [
        "[resourceId('Microsoft.Network/networkInterfaces', concat(parameters('name'), '-NetworkInterface'))]"
      ],
      "tags": {
        "filesystem": "[variables('tagname')]"
      },
      "properties": {
        "hardwareProfile": {
          "vmSize": "[parameters('mdsSku')]"
        },
        "osProfile": {
          "computerName": "[parameters('name')]",
          "adminUsername": "lustre",
          "customData": "[base64(variables('ciScript'))]",
          "linuxConfiguration": {
            "disablePasswordAuthentication": true,
            "ssh": {
              "publicKeys": [
                {
                  "path": "/home/lustre/.ssh/authorized_keys",
                  "keyData": "[parameters('rsaPublicKey')]"
                }
              ]
            }
          }
        },
        "storageProfile": {
          "imageReference": "[variables('imageReference')]",
          "osDisk": {
            "createOption": "FromImage",
            "caching": "ReadWrite"
          },
          "dataDisks": "[variables('mdtDataDisks')]"
        },
        "networkProfile": {
          "networkInterfaces": [
            {
              "id": "[resourceId('Microsoft.Network/networkInterfaces', concat(parameters('name'), '-NetworkInterface'))]"
            }
          ]
        }
      }
    },
    {
      "name": "[concat(parameters('name'), '-vmss')]",
      "type": "Microsoft.Compute/virtualMachineScaleSets",
      "tags": {
        "filesystem": "[variables('tagname')]"
      },
      "sku": {
        "name": "[parameters('ossSku')]",
        "tier": "Standard",
        "capacity": "[parameters('instanceCount')]"
      },
      "apiVersion": "2018-10-01",
      "location": "[resourceGroup().location]",
      "properties": {
        "overprovision": true,
        "upgradePolicy": {
          "mode": "Manual"
        },
        "virtualMachineProfile": {
          "storageProfile": {
            "imageReference": "[variables('imageReference')]",
            "osDisk": {
              "createOption": "FromImage",
              "caching": "ReadWrite"
            },
            "dataDisks": "[variables('ostDataDisks')]"
          },
          "osProfile": {
            "computerNamePrefix": "[parameters('name')]",
            "adminUsername": "lustre",
            "customData": "[base64(variables('ciScript'))]",
            "linuxConfiguration": {
              "disablePasswordAuthentication": true,
              "ssh": {
                "publicKeys": [
                  {
                    "path": "/home/lustre/.ssh/authorized_keys",
                    "keyData": "[parameters('rsaPublicKey')]"
                  }
                ]
              }
            }
          },
          "networkProfile": {
            "networkInterfaceConfigurations": [
              {
                "name": "[concat(parameters('name'), '-nic')]",
                "properties": {
                  "primary": true,
                  "enableAcceleratedNetworking": true,
                  "ipConfigurations": [
                    {
                      "name": "ipConfig-vmss",
                      "properties": {
                        "subnet": {
                          "id": "[variables('subnet')]"
                        }
                      }
                    }
                  ]
                }
              }
            ]
          }
        }
      }
    }
  ],
  "outputs": {},
  "functions": []
}
